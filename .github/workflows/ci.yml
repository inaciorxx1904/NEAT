name: CI

on: [push, pull_request]

jobs:
  CI:
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]

    steps:

    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: ls and pwd
      run: |
        id
        ls -l
        pwd
      
    - name: install gyronimo requirements
      run: |
        sudo apt-get update
        sudo apt-get install -y wget git less make gsl-bin libgsl-dev libgslcblas0 cmake libboost-all-dev doxygen gcc-10 g++-10 gcc-10-base python3-dev python3-pip pkg-config software-properties-common libnetcdf-dev libnetcdff-dev liblapack-dev libscalapack-mpi-dev libhdf5-dev libhdf5-serial-dev libnetcdf-c++4-dev

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: which python after python setup
      run: python --version

    - name: Install required python packages
      run: |
        python -m pip install --upgrade pip
        pip install wheel matplotlib numpy scipy ninja cmake pybind11 joblib qsc mpi4py f90wrap
        alias pip=pip3
        alias python=python3
    
    - name: env after adding python
      run: env

    - name: PWD
      run: pwd

    - name: ls
      run: ls

    - name: Configure and install gyronimo
      run: |
        cd external/gyronimo
        mkdir -p build
        cd build
        CXX=g++-10 cmake -DCMAKE_INSTALL_PREFIX=../../../build -DSUPPORT_OPENMP=ON -DSUPPORT_VMEC=ON ../
        cmake --build . --target install 

    - name: Add to LD_LIBRARY_PATH so scalapack etc can be found
      run: echo "LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu" >> $GITHUB_ENV

    - name: Configure and install vmec
      run: |
        cd external/vmec
        cp cmake/machines/ubuntu.json cmake_config_file.json
        cat cmake_config_file.json
        pip install .

    - name: Try importing vmec module
      run: python -c "print(dir()); import vmec; print(dir()); print(dir(vmec)); print('package:', vmec.__package__); print('spec:', vmec.__spec__); print('doc:', vmec.__doc__); print('file:', vmec.__file__); print('path:', vmec.__path__)"

    - name: Configure and install simple
      run: |
        cd external/simple
        mkdir build
        cd build
        CXX=g++ cmake -DCMAKE_INSTALL_PREFIX=../../../build ../
        cmake --build .
        cp simple.x ../../../build/bin

    # - name: Try running simple
    #   run: |
    #     cd build/bin
    #     ./simple.x
    
    - name: Install simsopt
      run: |
        pip install simsopt

    - name: Try running simsopt
      run: |
        python -c "import simsopt; print('success')"

    - name: Install NEAT
      run: |
        cd src/fields_NEAT
        g++-10 -std=c++2a -fPIC equilibrium_stellna_qs.cc -I$(pwd)/../../build/include -I$(pwd)/.. -c
        cd ../metrics_NEAT
        g++-10 -std=c++2a -fPIC metric_stellna_qs.cc -I$(pwd)/../../build/include -I$(pwd)/.. -c
        cd ../NEATpp
        g++-10 -std=c++2a -fPIC -shared NEAT.cc ../fields_NEAT/equilibrium_stellna_qs.o ../metrics_NEAT/metric_stellna_qs.o -o NEAT.so $(python3 -m pybind11 --includes) -L/usr/lib -lgsl -L$(pwd)/../../build/lib -lgyronimo -I$(pwd)/../../build/include/ -I$(pwd)/../ -Wl,-rpath $(pwd)/../../build/lib -Wl,-rpath $(pwd)/..

    - name: Run unit tests
      run: |
        python -m unittest -v
